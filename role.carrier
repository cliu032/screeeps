var roleCarrier = {

    /** @param {Creep} creep **/
    run: function(creep) {

	    if(creep.memory.delivering && creep.carry.energy == 0) {
            creep.memory.delivering = false;
            creep.say('ðŸ”„ picking up');
	    }
	    if(!creep.memory.delivering && creep.carry.energy == creep.carryCapacity) {
	        creep.memory.delivering = true;
	        creep.say('ðŸš§ deliver');
	    }

	    if(creep.memory.delivering) {
            var target = creep.pos.findClosestByPath(FIND_STRUCTURES, {
                filter: (structure) => {
                    return ((structure.structureType == STRUCTURE_EXTENSION ||
                        structure.structureType == STRUCTURE_SPAWN) && structure.energy < structure.energyCapacity);
                }
	        });
            if (!target) {
    	        target = creep.pos.findClosestByRange(Object.values(Game.creeps), {
    	            filter: (target) => {
    	                return (target.memory.role == 'builder' ||
    	                        target.memory.role == 'upgrader') && (target.carry.energy < (target.carryCapacity - 10));
    	            }
    	        });
            }
            if (target) {
                if(creep.transfer(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                    creep.moveTo(target, {visualizePathStyle: {stroke: '#ffffff'}});
                }
            }
	    }
	    else {
	        var droppedEnergy = creep.pos.findClosestByPath(FIND_DROPPED_RESOURCES);
	        if (droppedEnergy) {
                if(creep.pickup(droppedEnergy) == ERR_NOT_IN_RANGE){
                    creep.moveTo(droppedEnergy);
                }
	        }
	        else {
    	        var source = creep.pos.findClosestByPath(FIND_STRUCTURES, {
                    filter: (structure) => {
                        return (structure.structureType == STRUCTURE_CONTAINER && structure.store[RESOURCE_ENERGY] >= 50)
                    }
    	        });
        	    if (source) {
        	        if(creep.withdraw(source, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                        creep.moveTo(source);
                    }
        	    }
	        }
	    }
	}
};

module.exports = roleCarrier;
